{"version":3,"file":"static/js/187.15c3609c.chunk.js","mappings":"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","sources":["components/3d/ObjectPalette.tsx","store/gameStore.ts","../node_modules/zustand/esm/vanilla.mjs","../node_modules/zustand/esm/react.mjs"],"sourcesContent":["import React from 'react';\nimport { useGameStore } from '../../store/gameStore';\nimport { motion } from 'framer-motion';\n\nconst objects = [\n  { id: 'fence', name: 'Fence', icon: '🪧', color: 'bg-white', emphasis: true },\n  { id: 'corner_fence', name: 'Corner', icon: '↱', color: 'bg-gray-100', emphasis: true },\n  { id: 'gate', name: 'Gate', icon: '🚪', color: 'bg-orange-200', emphasis: true },\n  { id: 'house', name: 'House', icon: '🏠', color: 'bg-red-300' },\n  { id: 'tree', name: 'Tree', icon: '🌳', color: 'bg-green-400' },\n  { id: 'hay_bale', name: 'Hay Bale', icon: '🟨', color: 'bg-yellow-300' },\n  { id: 'water_trough', name: 'Water', icon: '💧', color: 'bg-blue-300' },\n  { id: 'scarecrow', name: 'Scarecrow', icon: '🧙', color: 'bg-purple-300' },\n];\n\nconst ObjectPalette: React.FC = () => {\n  const { currentDragItem, setCurrentDragItem, gamePhase } = useGameStore();\n\n  if (gamePhase !== 'building') return null;\n\n  return (\n    <div className=\"absolute bottom-8 left-1/2 transform -translate-x-1/2 z-30\">\n      <motion.div \n        className=\"bg-black/50 backdrop-blur-md rounded-2xl p-4 border border-white/20\"\n        initial={{ y: 100, opacity: 0 }}\n        animate={{ y: 0, opacity: 1 }}\n        transition={{ type: \"spring\", stiffness: 300, damping: 30 }}\n      >\n        <div className=\"flex gap-2\">\n          {objects.map((obj, index) => (\n            <motion.button\n              key={obj.id}\n              className={`\n                relative w-16 h-16 rounded-xl flex flex-col items-center justify-center\n                transition-all duration-200 transform hover:scale-110\n                ${currentDragItem === obj.id ? 'ring-4 ring-yellow-400 scale-110' : ''}\n                ${obj.emphasis ? 'animate-pulse' : ''}\n                ${obj.color}\n              `}\n              onClick={() => setCurrentDragItem(obj.id)}\n              whileHover={{ y: -5 }}\n              whileTap={{ scale: 0.95 }}\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.05 }}\n            >\n              <span className=\"text-2xl\">{obj.icon}</span>\n              <span className=\"text-xs mt-1 font-semibold text-gray-800\">{obj.name}</span>\n              \n              {/* Special emphasis for fence components */}\n              {obj.emphasis && (\n                <motion.div\n                  className=\"absolute -top-1 -right-1 w-3 h-3 bg-yellow-400 rounded-full\"\n                  animate={{ scale: [1, 1.3, 1] }}\n                  transition={{ repeat: Infinity, duration: 1.5 }}\n                />\n              )}\n            </motion.button>\n          ))}\n        </div>\n        \n        <div className=\"mt-3 text-center\">\n          <p className=\"text-white text-sm\">\n            <kbd className=\"px-2 py-1 bg-white/20 rounded\">R</kbd> Rotate • \n            <kbd className=\"px-2 py-1 bg-white/20 rounded ml-2\">D</kbd> Delete Mode • \n            <kbd className=\"px-2 py-1 bg-white/20 rounded ml-2\">Shift+Click</kbd> Delete\n          </p>\n          {currentDragItem && (\n            <motion.p \n              className=\"text-yellow-300 text-xs mt-1\"\n              initial={{ opacity: 0 }}\n              animate={{ opacity: 1 }}\n            >\n              Click on the platform to place {objects.find(o => o.id === currentDragItem)?.name}\n            </motion.p>\n          )}\n        </div>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default ObjectPalette;","import { create } from 'zustand';\n\ninterface PlacedObject {\n  id: string;\n  type: string;\n  position: [number, number, number];\n  rotation: [number, number, number];\n  color?: string;\n}\n\ninterface GameState {\n  // Game state\n  placedObjects: PlacedObject[];\n  currentDragItem: string | null;\n  gamePhase: 'building' | 'ready' | 'destruction';\n  \n  // Statistics\n  score: number;\n  blocksPlaced: number;\n  timeElapsed: number;\n  \n  // Actions\n  addObject: (object: PlacedObject) => void;\n  removeObject: (id: string) => void;\n  setCurrentDragItem: (item: string | null) => void;\n  setGamePhase: (phase: 'building' | 'ready' | 'destruction') => void;\n  incrementScore: (points: number) => void;\n  resetGame: () => void;\n  updateTimeElapsed: (time: number) => void;\n}\n\nconst initialState = {\n  placedObjects: [],\n  currentDragItem: null,\n  gamePhase: 'building' as const,\n  score: 0,\n  blocksPlaced: 0,\n  timeElapsed: 0,\n};\n\nexport const useGameStore = create<GameState>((set) => ({\n  ...initialState,\n  \n  addObject: (object) =>\n    set((state) => ({\n      placedObjects: [...state.placedObjects, object],\n      blocksPlaced: state.blocksPlaced + 1,\n    })),\n  \n  removeObject: (id) =>\n    set((state) => ({\n      placedObjects: state.placedObjects.filter((obj) => obj.id !== id),\n      blocksPlaced: Math.max(0, state.blocksPlaced - 1),\n    })),\n  \n  setCurrentDragItem: (item) =>\n    set({ currentDragItem: item }),\n  \n  setGamePhase: (phase) =>\n    set({ gamePhase: phase }),\n  \n  incrementScore: (points) =>\n    set((state) => ({ score: state.score + points })),\n  \n  resetGame: () =>\n    set(initialState),\n  \n  updateTimeElapsed: (time) =>\n    set({ timeElapsed: time }),\n}));","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n","import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    React.useCallback(() => selector(api.getState()), [api, selector]),\n    React.useCallback(() => selector(api.getInitialState()), [api, selector])\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\n\nexport { create, useStore };\n"],"names":["objects","id","name","icon","color","emphasis","ObjectPalette","_objects$find","currentDragItem","setCurrentDragItem","gamePhase","useGameStore","_jsx","className","children","_jsxs","motion","div","initial","y","opacity","animate","transition","type","stiffness","damping","map","obj","index","button","concat","onClick","whileHover","whileTap","scale","delay","repeat","Infinity","duration","p","find","o","initialState","placedObjects","score","blocksPlaced","timeElapsed","create","set","_objectSpread","addObject","object","state","removeObject","filter","Math","max","item","setGamePhase","phase","incrementScore","points","resetGame","updateTimeElapsed","time","createStoreImpl","createState","listeners","Set","setState","partial","replace","nextState","Object","is","previousState","assign","forEach","listener","getState","api","getInitialState","subscribe","add","delete","createStore","identity","arg","createImpl","useBoundStore","selector","arguments","length","undefined","slice","React","useStore"],"sourceRoot":""}